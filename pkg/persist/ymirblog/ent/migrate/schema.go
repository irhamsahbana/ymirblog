// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ArticlesColumns holds the columns for the "articles" table.
	ArticlesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Default: "untitled"},
		{Name: "body", Type: field.TypeString, Nullable: true},
		{Name: "user_articles", Type: field.TypeInt, Nullable: true},
	}
	// ArticlesTable holds the schema information for the "articles" table.
	ArticlesTable = &schema.Table{
		Name:       "articles",
		Columns:    ArticlesColumns,
		PrimaryKey: []*schema.Column{ArticlesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "articles_users_articles",
				Columns:    []*schema.Column{ArticlesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TagsColumns holds the columns for the "tags" table.
	TagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// TagsTable holds the schema information for the "tags" table.
	TagsTable = &schema.Table{
		Name:       "tags",
		Columns:    TagsColumns,
		PrimaryKey: []*schema.Column{TagsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// YmirsColumns holds the columns for the "ymirs" table.
	YmirsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "version", Type: field.TypeString, Default: "alpha-test-dev1"},
	}
	// YmirsTable holds the schema information for the "ymirs" table.
	YmirsTable = &schema.Table{
		Name:       "ymirs",
		Columns:    YmirsColumns,
		PrimaryKey: []*schema.Column{YmirsColumns[0]},
	}
	// TagArticlesColumns holds the columns for the "tag_articles" table.
	TagArticlesColumns = []*schema.Column{
		{Name: "tag_id", Type: field.TypeInt},
		{Name: "article_id", Type: field.TypeInt},
	}
	// TagArticlesTable holds the schema information for the "tag_articles" table.
	TagArticlesTable = &schema.Table{
		Name:       "tag_articles",
		Columns:    TagArticlesColumns,
		PrimaryKey: []*schema.Column{TagArticlesColumns[0], TagArticlesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tag_articles_tag_id",
				Columns:    []*schema.Column{TagArticlesColumns[0]},
				RefColumns: []*schema.Column{TagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tag_articles_article_id",
				Columns:    []*schema.Column{TagArticlesColumns[1]},
				RefColumns: []*schema.Column{ArticlesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ArticlesTable,
		TagsTable,
		UsersTable,
		YmirsTable,
		TagArticlesTable,
	}
)

func init() {
	ArticlesTable.ForeignKeys[0].RefTable = UsersTable
	TagArticlesTable.ForeignKeys[0].RefTable = TagsTable
	TagArticlesTable.ForeignKeys[1].RefTable = ArticlesTable
}
